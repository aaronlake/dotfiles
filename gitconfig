[user]
	name = Aaron Lake
	email = aaron.lake@gmail.com

[alias]
  c = commit -am
  up = pull
  p = push
  s = status -s
  df = diff --color --color-words --abbrev
  lg = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --

  # from http://blog.kfish.org/2010/04/git-lola.html
  lol = log --graph --decorate --pretty=oneline --abbrev-commit
  lola = log --graph --decorate --pretty=oneline --abbrev-commit --all
  ll = log --graph --date=short

  # from https://git.wiki.kernel.org/index.php/Aliases
  whois = "!sh -c 'git log -i -1 --pretty=\"format:%an <%ae>\n\" --author=\"$1\"' -"
  whatis = show -s --pretty='tformat:%h (%s, %ad)' --date=short

  #from http://serverfault.com/questions/175052/how-to-tell-which-local-branch-is-tracking-which-remote-branch-in-git
  upstream = rev-parse --symbolic-full-name --abbrev-ref HEAD@{upstream}

  # what got pushed to master in the last hour
  #  based on http://stackoverflow.com/questions/3357219/expose-the-date-a-commit-was-pushed-to-a-repository
  justpushed = log origin/master@{\"1 hour ago\"}..origin/master --

  # from https://gist.github.com/492227
  lost = !"git fsck | awk '/dangling commit/ {print $3}' | git show --format='SHA1: %C(yellow)%h%Creset %f' --stdin | awk '/SHA1/ {sub(\"SHA1: \", \"\"); print}'"

  # show a list of branches sorted by time of last commit
  brage = "!f() { git for-each-ref --sort=committerdate refs/heads $1  --format=\"%(refname:short)\" ; }; g() { for C in $(f $1) ; do git show -s --pretty=format:\"%Cgreen%ci %Cblue%cr%Creset  $C\" \"$C\" -- ; done; }; g "

  # show a list of tags sorted by when they were tagged
  tagage = "!sh -c 'git for-each-ref --sort=taggerdate refs/tags --format=\"%(refname:short)\"'"

[color]
  # Use colors in Git commands that are capable of colored output when outputting to the terminal
  ui = auto
  diff = auto
  status = auto
  branch = auto
  interactive = auto

[color "branch"]
  current = yellow reverse
  local = yellow
  remote = green

[color "diff"]
  meta = yellow bold
  frag = magenta bold
  old = red bold
  new = green bold

[color "status"]
  added = yellow
  changed = green
  untracked = cyan

[merge]
  # Include summaries of merged commits in newly created merge commit messages
  log = true

[apply]
  whitespace = fix

[core]
  # Use custom `.gitignore` and `.gitattributes`
	excludesfile = /home/alake/.gitignore_global
  attributesfile = ~/.gitattributes
  # Treat spaces before tabs, lines that are indented with 8 or more spaces, and all kinds of trailing whitespace as an error
  whitespace = space-before-tab,indent-with-non-tab,trailing-space

[hub]
protocol = https

[credential]
[filter "lfs"]
	clean = git lfs clean %f
	smudge = git lfs smudge %f
	required = true
[push]
	default = matching

[url "ssh://git@github.com/"]
  insteadOf = https://github.com/

[init]
	defaultBranch = main
